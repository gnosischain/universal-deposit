name: universal-deposit-prod

services:
  postgres:
    image: postgres:16-alpine
    container_name: ud_postgres_prod
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-universal_deposit}
    volumes:
      - pg_data_prod:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-universal_deposit}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: ud_redis_prod
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis_data_prod:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: ud_rabbitmq_prod
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-admin}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-password}
    volumes:
      - rabbitmq_data_prod:/var/lib/rabbitmq
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Single image, role toggled via env (RUN_*)
  api:
    image: ${BACKEND_IMAGE:-universal-deposit:latest}
    container_name: ud_api_prod
    env_file:
      - .env
    environment:
      NODE_ENV: production
      DATABASE_URL: ${DATABASE_URL:-postgresql://postgres:postgres@postgres:5432/universal_deposit}
      REDIS_URL: ${REDIS_URL:-redis://redis:6379}
      RABBITMQ_URL: ${RABBITMQ_URL:-amqp://admin:password@rabbitmq:5672}
      RUN_API: "true"
      RUN_BALANCE_WATCHER: "false"
      RUN_DEPLOY_WORKER: "false"
      RUN_SETTLE_WORKER: "false"
      SKIP_PRISMA_GENERATE: "false"
      SKIP_DB_MIGRATIONS: "false"
      CHAINS_CONFIG_PATH: ${CHAINS_CONFIG_PATH:-/app/config/chains.json}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - "${API_PORT:-3000}:3000"
    volumes:
      - ./config:/app/config:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  balance-watcher:
    image: ${BACKEND_IMAGE:-universal-deposit:latest}
    container_name: ud_balance_watcher_prod
    env_file:
      - .env
    environment:
      NODE_ENV: production
      DATABASE_URL: ${DATABASE_URL:-postgresql://postgres:postgres@postgres:5432/universal_deposit}
      REDIS_URL: ${REDIS_URL:-redis://redis:6379}
      RABBITMQ_URL: ${RABBITMQ_URL:-amqp://admin:password@rabbitmq:5672}
      RUN_API: "false"
      RUN_BALANCE_WATCHER: "true"
      RUN_DEPLOY_WORKER: "false"
      RUN_SETTLE_WORKER: "false"
      SKIP_PRISMA_GENERATE: "true"
      SKIP_DB_MIGRATIONS: "true"
      CHAINS_CONFIG_PATH: ${CHAINS_CONFIG_PATH:-/app/config/chains.json}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      api:
        condition: service_healthy
    volumes:
      - ./config:/app/config:ro
    restart: unless-stopped

  deploy-worker:
    image: ${BACKEND_IMAGE:-universal-deposit:latest}
    container_name: ud_deploy_worker_prod
    env_file:
      - .env
    environment:
      NODE_ENV: production
      DATABASE_URL: ${DATABASE_URL:-postgresql://postgres:postgres@postgres:5432/universal_deposit}
      REDIS_URL: ${REDIS_URL:-redis://redis:6379}
      RABBITMQ_URL: ${RABBITMQ_URL:-amqp://admin:password@rabbitmq:5672}
      RUN_API: "false"
      RUN_BALANCE_WATCHER: "false"
      RUN_DEPLOY_WORKER: "true"
      RUN_SETTLE_WORKER: "false"
      SKIP_PRISMA_GENERATE: "true"
      SKIP_DB_MIGRATIONS: "true"
      CHAINS_CONFIG_PATH: ${CHAINS_CONFIG_PATH:-/app/config/chains.json}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      api:
        condition: service_healthy
    volumes:
      - ./config:/app/config:ro
    restart: unless-stopped

  settle-worker:
    image: ${BACKEND_IMAGE:-universal-deposit:latest}
    container_name: ud_settle_worker_prod
    env_file:
      - .env
    environment:
      NODE_ENV: production
      DATABASE_URL: ${DATABASE_URL:-postgresql://postgres:postgres@postgres:5432/universal_deposit}
      REDIS_URL: ${REDIS_URL:-redis://redis:6379}
      RABBITMQ_URL: ${RABBITMQ_URL:-amqp://admin:password@rabbitmq:5672}
      RUN_API: "false"
      RUN_BALANCE_WATCHER: "false"
      RUN_DEPLOY_WORKER: "false"
      RUN_SETTLE_WORKER: "true"
      SKIP_PRISMA_GENERATE: "true"
      SKIP_DB_MIGRATIONS: "true"
      CHAINS_CONFIG_PATH: ${CHAINS_CONFIG_PATH:-/app/config/chains.json}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      api:
        condition: service_healthy
    volumes:
      - ./config:/app/config:ro
    restart: unless-stopped

volumes:
  pg_data_prod:
  redis_data_prod:
  rabbitmq_data_prod:
